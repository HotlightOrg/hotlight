/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface CommandInput {
    }
    interface CommandModal {
    }
    interface CommandResults {
    }
    interface MyComponent {
    }
}
declare global {
    interface HTMLCommandInputElement extends Components.CommandInput, HTMLStencilElement {
    }
    var HTMLCommandInputElement: {
        prototype: HTMLCommandInputElement;
        new (): HTMLCommandInputElement;
    };
    interface HTMLCommandModalElement extends Components.CommandModal, HTMLStencilElement {
    }
    var HTMLCommandModalElement: {
        prototype: HTMLCommandModalElement;
        new (): HTMLCommandModalElement;
    };
    interface HTMLCommandResultsElement extends Components.CommandResults, HTMLStencilElement {
    }
    var HTMLCommandResultsElement: {
        prototype: HTMLCommandResultsElement;
        new (): HTMLCommandResultsElement;
    };
    interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {
    }
    var HTMLMyComponentElement: {
        prototype: HTMLMyComponentElement;
        new (): HTMLMyComponentElement;
    };
    interface HTMLElementTagNameMap {
        "command-input": HTMLCommandInputElement;
        "command-modal": HTMLCommandModalElement;
        "command-results": HTMLCommandResultsElement;
        "my-component": HTMLMyComponentElement;
    }
}
declare namespace LocalJSX {
    interface CommandInput {
        "onCommandk:close"?: (event: CustomEvent<any>) => void;
        "onCommandk:query"?: (event: CustomEvent<string>) => void;
    }
    interface CommandModal {
    }
    interface CommandResults {
        "onCommandk:trigger"?: (event: CustomEvent<{}>) => void;
    }
    interface MyComponent {
        "onCommandk:open"?: (event: CustomEvent<{}>) => void;
    }
    interface IntrinsicElements {
        "command-input": CommandInput;
        "command-modal": CommandModal;
        "command-results": CommandResults;
        "my-component": MyComponent;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "command-input": LocalJSX.CommandInput & JSXBase.HTMLAttributes<HTMLCommandInputElement>;
            "command-modal": LocalJSX.CommandModal & JSXBase.HTMLAttributes<HTMLCommandModalElement>;
            "command-results": LocalJSX.CommandResults & JSXBase.HTMLAttributes<HTMLCommandResultsElement>;
            "my-component": LocalJSX.MyComponent & JSXBase.HTMLAttributes<HTMLMyComponentElement>;
        }
    }
}
