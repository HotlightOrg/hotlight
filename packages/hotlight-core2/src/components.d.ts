/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { HotlightAction as HotlightAction1, HotlightConfig } from "./components/hotlight-modal/hotlight-modal";
import { HotlightAction, HotlightConfig as HotlightConfig1 } from "./components/hotlight-modal/hotlight-modal";
import { HotlightContext } from "./utils/fuzzy";
export namespace Components {
    interface HotlightCrumb {
        "label": string;
    }
    interface HotlightInput {
        "config": HotlightConfig;
    }
    interface HotlightLauncher {
    }
    interface HotlightModal {
        "actions": HotlightAction[];
        "config": HotlightConfig;
    }
    interface HotlightResults {
        "actions": HotlightAction[];
        "config": HotlightConfig;
    }
}
declare global {
    interface HTMLHotlightCrumbElement extends Components.HotlightCrumb, HTMLStencilElement {
    }
    var HTMLHotlightCrumbElement: {
        prototype: HTMLHotlightCrumbElement;
        new (): HTMLHotlightCrumbElement;
    };
    interface HTMLHotlightInputElement extends Components.HotlightInput, HTMLStencilElement {
    }
    var HTMLHotlightInputElement: {
        prototype: HTMLHotlightInputElement;
        new (): HTMLHotlightInputElement;
    };
    interface HTMLHotlightLauncherElement extends Components.HotlightLauncher, HTMLStencilElement {
    }
    var HTMLHotlightLauncherElement: {
        prototype: HTMLHotlightLauncherElement;
        new (): HTMLHotlightLauncherElement;
    };
    interface HTMLHotlightModalElement extends Components.HotlightModal, HTMLStencilElement {
    }
    var HTMLHotlightModalElement: {
        prototype: HTMLHotlightModalElement;
        new (): HTMLHotlightModalElement;
    };
    interface HTMLHotlightResultsElement extends Components.HotlightResults, HTMLStencilElement {
    }
    var HTMLHotlightResultsElement: {
        prototype: HTMLHotlightResultsElement;
        new (): HTMLHotlightResultsElement;
    };
    interface HTMLElementTagNameMap {
        "hotlight-crumb": HTMLHotlightCrumbElement;
        "hotlight-input": HTMLHotlightInputElement;
        "hotlight-launcher": HTMLHotlightLauncherElement;
        "hotlight-modal": HTMLHotlightModalElement;
        "hotlight-results": HTMLHotlightResultsElement;
    }
}
declare namespace LocalJSX {
    interface HotlightCrumb {
        "label"?: string;
    }
    interface HotlightInput {
        "config"?: HotlightConfig;
        "onCommandk:close"?: (event: CustomEvent<any>) => void;
        "onCommandk:query"?: (event: CustomEvent<string>) => void;
        "onGoUp"?: (event: CustomEvent<any>) => void;
    }
    interface HotlightLauncher {
        "onCommandk:open"?: (event: CustomEvent<{}>) => void;
    }
    interface HotlightModal {
        "actions"?: HotlightAction[];
        "config"?: HotlightConfig;
    }
    interface HotlightResults {
        "actions"?: HotlightAction[];
        "config"?: HotlightConfig;
        "onCommandk:clear"?: (event: CustomEvent<HotlightContext>) => void;
        "onCommandk:trigger"?: (event: CustomEvent<{}>) => void;
    }
    interface IntrinsicElements {
        "hotlight-crumb": HotlightCrumb;
        "hotlight-input": HotlightInput;
        "hotlight-launcher": HotlightLauncher;
        "hotlight-modal": HotlightModal;
        "hotlight-results": HotlightResults;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "hotlight-crumb": LocalJSX.HotlightCrumb & JSXBase.HTMLAttributes<HTMLHotlightCrumbElement>;
            "hotlight-input": LocalJSX.HotlightInput & JSXBase.HTMLAttributes<HTMLHotlightInputElement>;
            "hotlight-launcher": LocalJSX.HotlightLauncher & JSXBase.HTMLAttributes<HTMLHotlightLauncherElement>;
            "hotlight-modal": LocalJSX.HotlightModal & JSXBase.HTMLAttributes<HTMLHotlightModalElement>;
            "hotlight-results": LocalJSX.HotlightResults & JSXBase.HTMLAttributes<HTMLHotlightResultsElement>;
        }
    }
}
